üìÑ Resumo do Projeto
üîπ Coleta de Dados
Um script em Python acessa a API p√∫blica do GitHub com autentica√ß√£o via token. O algoritmo busca os 50 reposit√≥rios mais populares (com base em estrelas) e coleta at√© 500 contribuidores para cada reposit√≥rio, ordenados por n√∫mero de contribui√ß√µes.

Os dados s√£o armazenados em um arquivo JSON (github_repos_contributors.json), estruturado como um mapeamento de reposit√≥rios para seus respectivos contribuidores.

üîπ Constru√ß√£o do Grafo Bipartido
A partir dos dados coletados, √© constru√≠do um grafo bipartido contendo dois tipos de n√≥s:

- Usu√°rios (contribuidores) / Reposit√≥rios

As arestas representam a rela√ß√£o de contribui√ß√£o entre usu√°rios e reposit√≥rios.

üîπ Proje√ß√£o do Grafo de Usu√°rios
Com base no grafo bipartido, √© gerado um grafo projetado apenas com usu√°rios. Nesse grafo:

Cada n√≥ representa um usu√°rio

H√° uma aresta entre dois usu√°rios se eles contribu√≠ram para ao menos um reposit√≥rio em comum

O peso da aresta corresponde ao n√∫mero de reposit√≥rios compartilhados

Esse grafo √© utilizado para an√°lises de grau, centralidade, agrupamento e comunidades.

üîπ Exporta√ß√£o (D√∫vida nessa parte porque o professor disse que n√£o podemos usar bibliotecas)
Os grafos s√£o exportados nos formatos .gexf:

grafo_bipartido.gexf

grafo_usuarios.gexf

Esses arquivos podem ser abertos no Gephi para visualiza√ß√£o e an√°lise de m√©tricas de redes sociais.

