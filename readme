# üìä An√°lise de Redes de Contribui√ß√£o no GitHub

## üìÑ Resumo do Projeto

### üîπ Coleta de Dados

Um script em Python acessa a API p√∫blica do GitHub com autentica√ß√£o via token. O algoritmo busca os **50 reposit√≥rios mais populares** (com base em estrelas) e coleta at√© **100 contribuidores** para cada reposit√≥rio, ordenados por n√∫mero de contribui√ß√µes.

Os dados s√£o armazenados em um arquivo JSON: github_repos_contributors.json

Esse arquivo cont√©m um mapeamento de reposit√≥rios para seus respectivos contribuidores.

---

### üîπ Constru√ß√£o do Grafo Bipartido

A partir dos dados coletados, √© constru√≠do um **grafo bipartido** contendo dois tipos de n√≥s:

- Usu√°rios (contribuidores)
- Reposit√≥rios

As arestas representam a rela√ß√£o de contribui√ß√£o entre usu√°rios e reposit√≥rios.

---

### üîπ Proje√ß√£o do Grafo de Usu√°rios

A partir do grafo bipartido, √© gerado um grafo contendo apenas usu√°rios, onde:

- Cada n√≥ representa um usu√°rio
- H√° uma aresta entre dois usu√°rios se eles contribu√≠ram para ao menos um reposit√≥rio em comum
- O **peso da aresta** representa o n√∫mero de reposit√≥rios compartilhados

Esse grafo √© utilizado para an√°lises de:

- Grau
- Centralidade
- Agrupamento
- Comunidades

---

### üîπ Exporta√ß√£o dos Grafos

A exporta√ß√£o dos grafos foi feita em **dois modos distintos**:

- `gerar_grafo-MANUAL.py`: gera os arquivos `.gexf` manualmente, **sem uso de bibliotecas externas**, apenas com escrita direta no formato XML/GEXF
- `gerar_grafo-BIBLIOTECA.py`: utiliza a biblioteca `networkx` para gera√ß√£o e exporta√ß√£o autom√°tica dos grafos

Ambas vers√µes geram os seguintes arquivos:

- `grafo_bipartido.gexf`
- `grafo_usuarios.gexf`

Esses arquivos s√£o compat√≠veis com o **Gephi** para visualiza√ß√£o e an√°lise.

---

### üîπ Visualiza√ß√£o com Gephi ‚Äì ForceAtlas 2

Para explorar os grafos visualmente, recomenda-se utilizar o layout **ForceAtlas 2** no Gephi.

Esse layout simula for√ßas f√≠sicas:

- **Arestas agem como molas** entre os n√≥s conectados
- **N√≥s desconectados se repelem**
- **Grupos altamente conectados se agrupam naturalmente**

Com isso, o ForceAtlas 2 permite:

- Identificar **comunidades** visualmente
- Detectar **usu√°rios centrais** ou influentes
- Facilitar a an√°lise de estruturas densas ou perif√©ricas

---

## üß∞ Tecnologias Utilizadas

- Python 3.x
- API REST do GitHub
- Gephi 0.10+ (para visualiza√ß√£o)
- `networkx` (opcional, apenas na vers√£o com biblioteca)
